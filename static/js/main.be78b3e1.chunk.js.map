{"version":3,"sources":["components/Contact/Contact.module.css","components/App/App.module.css","styles/decreaseScale.module.css","styles/transitionToBottom.module.css","components/ContactList/ContactList.module.css","components/TelInput/TelInput.module.css","components/Notification/Notification.module.css","styles/translate.module.css","components/FilterContacts/FilterContacts.module.css","styles/pop.module.css","components/TelInput/TelInput.js","components/Notification/Notification.js","components/FormToAddContact/FormToAddContact.js","components/Contact/Contact.js","components/ContactList/ContactList.js","components/FilterContacts/FilterContacts.js","components/App/App.js","index.js","components/FormToAddContact/FormToAddContact.module.css"],"names":["module","exports","TelInput","isRequired","name","value","onChange","mask","placeholder","className","styles","inputMask","required","Notification","text","notificationContainer","FormToAddContact","state","props","initialValue","number","handleInput","e","setState","target","resetState","handleSubmit","preventDefault","onAddContact","isNameNotifShow","isNumNotifShow","handleCloseForm","onCloseForm","this","formWrapper","form","onSubmit","closeFormButton","onClick","inputLabel","nameInputWrapper","input","type","CSSTransition","in","timeout","unmountOnExit","classNames","transitionToBottom","numInputWrapper","Button","variant","color","submitButton","Component","defaultProps","Contact","onDeleteContact","contactCard","imgcontainer","contactImage","src","alt","deleteIcon","ContactList","contacts","length","TransitionGroup","component","contactList","map","contact","key","id","translate","contactListItem","FilterContact","onSetFilter","alert","filterInput","App","initialContactsArray","filter","initialFilterValue","inputCallState","isTitleRendered","showNameNotification","hideNameNotification","setTimeout","showNumNotification","hideNumNotification","addContact","isName","find","ct","isNumber","contactToAdd","uuidv1","prevState","deleteContact","setFilter","showHideForm","savedLocalyContacts","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","filteredContacts","toLowerCase","includes","filterContacts","appWraper","pop","appTitle","addFormButton","decreaseScale","FilterContacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.be78b3e1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactCard\":\"Contact_contactCard__2wpsc\",\"imgcontainer\":\"Contact_imgcontainer__1qzuH\",\"contactImage\":\"Contact_contactImage__3oUJx\",\"deleteIcon\":\"Contact_deleteIcon__1yx7M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWraper\":\"App_appWraper__2qf2c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"decreaseScale_enter__EgJ44\",\"enterActive\":\"decreaseScale_enterActive__3PLlE\",\"exit\":\"decreaseScale_exit__3RZ_U\",\"exitActive\":\"decreaseScale_exitActive__4HxoN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"transitionToBottom_enter__sROF2\",\"enterActive\":\"transitionToBottom_enterActive__3XUUl\",\"exit\":\"transitionToBottom_exit__20rZC\",\"exitActive\":\"transitionToBottom_exitActive__2-t7m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3ZwiL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputMask\":\"TelInput_inputMask__1kPTK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notificationContainer\":\"Notification_notificationContainer__1Aytx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"translate_enter__1YSd8\",\"enterActive\":\"translate_enterActive__3Og_I\",\"exit\":\"translate_exit__3hlmS\",\"exitActive\":\"translate_exitActive__2aZFa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"FilterContacts_filterInput__1WQ6k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__1Q0me\",\"enterActive\":\"pop_enterActive__2awQ5\",\"exit\":\"pop_exit__2jRSM\",\"exitActive\":\"pop_exitActive__2QjaQ\"};","import React from \"react\";\r\nimport InputMask from \"react-input-mask\";\r\nimport styles from \"./TelInput.module.css\";\r\n\r\nconst TelInput = ({ isRequired, name, value, onChange, mask, placeholder }) => (\r\n  <InputMask\r\n    className={styles.inputMask}\r\n    mask={mask}\r\n    name={name}\r\n    value={value}\r\n    onChange={onChange}\r\n    required={isRequired}\r\n    placeholder={placeholder}\r\n  ></InputMask>\r\n);\r\n\r\nexport default TelInput;\r\n","import React from \"react\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\nimport styles from \"./Notification.module.css\";\r\n\r\nconst Notification = ({ text }) => (\r\n  <div className={styles.notificationContainer}>\r\n    <WarningIcon />\r\n    <span>{text}</span>\r\n  </div>\r\n);\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./FormToAddContact.module.css\";\r\nimport TelInput from \"../TelInput/TelInput\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport transitionToBottom from \"../../styles/transitionToBottom.module.css\";\r\n\r\nexport default class FormToAddContact extends Component {\r\n  static defaultProps = {\r\n    initialValue: \"\",\r\n  };\r\n\r\n  static propTypes = {\r\n    initialValue: PropTypes.string,\r\n  };\r\n\r\n  state = {\r\n    name: this.props.initialValue,\r\n    number: this.props.initialValue,\r\n  };\r\n\r\n  handleInput = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  resetState = () =>\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onAddContact({ ...this.state });\r\n    if (!this.props.isNameNotifShow || !this.props.isNumNotifShow) {\r\n      this.resetState();\r\n    }\r\n  };\r\n\r\n  handleCloseForm = (e) => {\r\n    this.props.onCloseForm();\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <section className={styles.formWrapper}>\r\n        <form className={styles.form} onSubmit={this.handleSubmit}>\r\n          <ClearIcon\r\n            className={styles.closeFormButton}\r\n            onClick={this.handleCloseForm}\r\n          />\r\n\r\n          <label className={styles.inputLabel}>Name</label>\r\n          <div className={styles.nameInputWrapper}>\r\n            <input\r\n              className={styles.input}\r\n              name=\"name\"\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={this.handleInput}\r\n              required\r\n            />\r\n            <CSSTransition\r\n              in={this.props.isNameNotifShow}\r\n              timeout={1000}\r\n              unmountOnExit\r\n              classNames={transitionToBottom}\r\n            >\r\n              <Notification\r\n                text={`Contact with this name has been already saved in your phonebook!!!`}\r\n              />\r\n            </CSSTransition>\r\n          </div>\r\n          <label className={styles.inputLabel}>Number</label>\r\n\r\n          <div className={styles.numInputWrapper}>\r\n            <TelInput\r\n              onChange={this.handleInput}\r\n              name=\"number\"\r\n              value={number}\r\n              mask=\"+99(999)-999-99-99\"\r\n              isRequired={true}\r\n              placeholder=\"+XX(XXX)-XXX-XX-XX\"\r\n            />\r\n\r\n            <CSSTransition\r\n              in={this.props.isNumNotifShow}\r\n              timeout={1000}\r\n              unmountOnExit\r\n              classNames={transitionToBottom}\r\n            >\r\n              {/* {this.props.isNumNotifShow && ( */}\r\n              <Notification\r\n                text={`This number has been already saved earlier !!!`}\r\n              />\r\n              {/* )} */}\r\n            </CSSTransition>\r\n          </div>\r\n          <br />\r\n\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            className={styles.submitButton}\r\n            type=\"submit\"\r\n          >\r\n            Add contact\r\n          </Button>\r\n        </form>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Contact.module.css\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\n// import ContactsSharpIcon from \"@material-ui/icons/ContactsSharp\";\r\n\r\nconst Contact = ({ name, number, onDeleteContact }) => (\r\n  <section className={styles.contactCard}>\r\n    <div className={styles.imgcontainer}>\r\n      <img\r\n        className={styles.contactImage}\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/93/Google_Contacts_icon.svg/768px-Google_Contacts_icon.svg.png\"\r\n        alt=\"contact-avatar\"\r\n      />\r\n      <p>{name}</p>\r\n    </div>\r\n    <p>{number}</p>\r\n    <ClearIcon\r\n      className={styles.deleteIcon}\r\n      onClick={onDeleteContact}\r\n    />\r\n  </section>\r\n);\r\n\r\nexport default Contact;\r\n\r\nContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport Contact from \"../Contact/Contact\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport translate from \"../../styles/translate.module.css\";\r\n\r\nconst ContactList = ({ contacts = [], onDeleteContact }) =>\r\n  contacts.length > 0 && (\r\n    <TransitionGroup component=\"ul\" className={styles.contactList}>\r\n      {contacts.map((contact) => (\r\n        <CSSTransition\r\n          key={contact.id}\r\n          timeout={250}\r\n          unmountOnExit\r\n          classNames={translate}\r\n        >\r\n          <li className={styles.contactListItem}>\r\n            <Contact\r\n              {...contact}\r\n              onDeleteContact={() => onDeleteContact(contact.id)}\r\n            />\r\n          </li>\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  );\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./FilterContacts.module.css\";\r\n\r\nconst FilterContact = ({\r\n  contacts = [],\r\n  value = \"\",\r\n  onSetFilter = function () {\r\n    alert(\"Sorry, the filter is updating now. Try to use it later\");\r\n  },\r\n}) => (\r\n  <>\r\n    <input\r\n      className={styles.filterInput}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onSetFilter}\r\n      placeholder=\"Enter the name or the number to find contact\"\r\n    />\r\n  </>\r\n);\r\n\r\nexport default FilterContact;\r\n\r\nFilterContact.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onSetFilter: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./App.module.css\";\nimport { v1 as uuidv1 } from \"uuid\";\nimport FormToAddContact from \"../FormToAddContact/FormToAddContact\";\nimport ContactList from \"../ContactList/ContactList\";\nimport FilterContacts from \"../FilterContacts/FilterContacts\";\nimport { Button } from \"@material-ui/core\";\nimport { CSSTransition } from \"react-transition-group\";\nimport pop from \"../../styles/pop.module.css\";\nimport decreaseScale from \"../../styles/decreaseScale.module.css\";\n\nconst filterContacts = (contacts, filter) => {\n  return contacts.filter(\n    (contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()) ||\n      contact.number.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n\nexport default class App extends Component {\n  static defaultProps = {\n    initialContactsArray: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n      { id: \"id-5\", name: \"Cavin Clein\", number: \"111-12-56\" },\n      { id: \"id-6\", name: \"Cris Dior\", number: \"222-89-12\" },\n      { id: \"id-7\", name: \"Gus Gussi\", number: \"333-17-79\" },\n      { id: \"id-8\", name: \"Va Voronin\", number: \"444-91-26\" },\n    ],\n    initialFilterValue: \"\",\n    inputCallState: false,\n    isTitleRendered: false,\n    isNameNotifShow: false,\n    isNumNotifShow: false,\n  };\n\n  static propTypes = {\n    initialContactsArray: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n    initialFilterValue: PropTypes.string,\n    inputCallState: PropTypes.bool,\n    isTitleRendered: PropTypes.bool,\n    isNameNotifShow: PropTypes.bool,\n    isNumNotifShow: PropTypes.bool,\n  };\n\n  state = {\n    contacts: this.props.initialContactsArray,\n    filter: this.props.initialFilterValue,\n    inputCallState: false,\n    isTitleRendered: false,\n    isNameNotifShow: false,\n    isNumNotifShow: false,\n  };\n\n  componentDidMount() {\n    const savedLocalyContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    if (savedLocalyContacts)\n      this.setState({\n        contacts: savedLocalyContacts,\n        isTitleRendered: true,\n      });\n    this.setState({\n      isTitleRendered: true,\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts.length !== this.state.contacts.length) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  showNameNotification = () => this.setState({ isNameNotifShow: true });\n  hideNameNotification = () =>\n    setTimeout(() => this.setState({ isNameNotifShow: false }), 1000);\n\n  showNumNotification = () => this.setState({ isNumNotifShow: true });\n  hideNumNotification = () =>\n    setTimeout(() => this.setState({ isNumNotifShow: false }), 1000);\n\n  addContact = (contact) => {\n    const { contacts } = this.state;\n    const isName = contacts.find((ct) => ct.name === contact.name);\n    const isNumber = contacts.find((ct) => ct.number === contact.number);\n\n    if (isName) {\n      this.showNameNotification();\n      this.hideNameNotification();\n    } else if (isNumber) {\n      this.showNumNotification(isNumber);\n      this.hideNumNotification(isNumber);\n    } else {\n      const contactToAdd = {\n        ...contact,\n        id: uuidv1(),\n      };\n      this.setState((prevState) => ({\n        contacts: [...prevState.contacts, contactToAdd],\n      }));\n    }\n  };\n\n  deleteContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  setFilter = (e) => {\n    this.setState({ filter: e.target.value });\n  };\n\n  showHideForm = (e) =>\n    this.setState((prevState) => ({\n      inputCallState: !prevState.inputCallState,\n    }));\n\n  render() {\n    const { contacts, filter, inputCallState, isTitleRendered } = this.state;\n    const filteredContacts = filterContacts(contacts, filter);\n\n    return (\n      <div className={styles.appWraper}>\n        <CSSTransition\n          in={isTitleRendered}\n          timeout={500}\n          unmountOnExit\n          classNames={pop}\n        >\n          <h1 className={styles.appTitle}>Phonebook</h1>\n        </CSSTransition>\n\n        <Button\n          variant=\"outlined\"\n          color=\"secondary\"\n          className={styles.addFormButton}\n          onClick={this.showHideForm}\n        >\n          {inputCallState ? \"Hide form\" : \"Add contact\"}\n        </Button>\n        <CSSTransition\n          in={inputCallState}\n          timeout={1000}\n          unmountOnExit\n          classNames={decreaseScale}\n        >\n          <FormToAddContact\n            {...this.state}\n            onAddContact={this.addContact}\n            onCloseForm={this.showHideForm}\n          />\n        </CSSTransition>\n        <CSSTransition\n          in={contacts.length > 0}\n          timeout={1000}\n          unmountOnExit\n          classNames={decreaseScale}\n        >\n          <h2>Contacts</h2>\n        </CSSTransition>\n        <CSSTransition\n          in={contacts.length > 1}\n          timeout={1000}\n          unmountOnExit\n          classNames={decreaseScale}\n        >\n          <FilterContacts\n            contacts={contacts}\n            value={filter}\n            onSetFilter={this.setFilter}\n          />\n        </CSSTransition>\n\n        <ContactList\n          contacts={filteredContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"FormToAddContact_formWrapper__35B1x\",\"form\":\"FormToAddContact_form__RzK1p\",\"inputLabel\":\"FormToAddContact_inputLabel__21YKu\",\"input\":\"FormToAddContact_input__28YgS\",\"submitButton\":\"FormToAddContact_submitButton__1t-eV\",\"closeFormButton\":\"FormToAddContact_closeFormButton__1lhpZ\",\"nameInputWrapper\":\"FormToAddContact_nameInputWrapper__1Xfo9\",\"numInputWrapper\":\"FormToAddContact_numInputWrapper__3iEnl\"};"],"sourceRoot":""}